Project API
This resource returns project information.
http://developers.goteo.org/doc/projects
---
tags:
    - projects

security:
    - basic: []

definitions:
    - schema:
        id: Project
        properties:
            id:
                type: string
                description: Project unique identifier
            name:
                type: string
                description: Name of the project
            node:
                type: string
                description: Node where the project was created originally
            description-short:
                type: string
                description: Short description of the project
            lang:
                type: string
                description: Main language of the project
            project-url:
                type: string
                description: Project's original URL (crowd-funding web page)
            image-url:
                type: string
                description: URL with the main image of the project
            date-created:
                type: string
                description: Date when the project was created RFC822 format
            date-published:
                type: string
                description: Date when the project was published RFC822 format
            latitude:
                type: number
                description: Latitude coordinate for the project (if available)
            longitude:
                type: number
                description: Longitude coordinate for the project (if available)
            region:
                type: string
                description: Region location for the project
            owner:
                type: string
                description: Project owner's user ID
            owner-name:
                type: string
                description: Project owner's user name
            status:
                type: string
                description: Status of the project
            minimum:
                type: number
                description: Minimum amount to achieve to consider the project succeeded
            optimum:
                type: number
                description: Optimum amount to achieve for the project to achieve all his goals
            amount:
                type: number
                description: Currently achieved amount for the project

    - schema:
        id: MetaProject
        properties:
            limit:
                type: integer
                description: Limit of results per page when retrieving a collection
            page:
                type: integer
                description: Current page, `0` based (first page is zero)
            total:
                type: integer
                description: Total elements available for the collection
            node:
                type: array
                description: Only if filtering by node
                items:
                    type: string
            project:
                type: array
                items:
                    type: string
                description: Only if filtering by project
            lang:
                type: array
                items:
                    type: string
                description: Only if filtering by lang
            from_date:
                type: string
                description: Only if filtering by from_date
            to_date:
                type: string
                description: Only if filtering by to_date
            category:
                type: array
                items:
                    type: number
                description: Only if filtering by category
            location:
                type: array
                items:
                    type: number
                description: Only if filtering by location

    - schema:
        id: ResponseProject
        properties:
            items:
                type: array
                items:
                    $ref: '#/definitions/api_projects_projects_get_Project'
            meta:
                $ref: '#/definitions/api_projects_projects_get_MetaProject'

parameters:
    - in: query
      type: string
      name: node
      description: Filter by individual node(s). Multiple nodes can be specified. Restricts the list to the projects originally created in that node(s)
      collectionFormat: multi
    - in: query
      name: project
      description: Filter by individual project(s). Multiple projects can be specified
      type: string
      collectionFormat: multi
    - in: query
      name: lang
      description: Get results by specified lang. Multiple langs can be specified
      type: string
      collectionFormat: multi
    - in: query
      name: from_date
      description: Filter from date. Ex. "2013-01-01". Restricts the list to the projects created in that range
      type: string
      format: date
    - in: query
      name: to_date
      description: Filter until date.. Ex. "2014-01-01". Restricts the list to the projects created in that range
      type: string
      format: date
    - in: query
      name: category
      description: Filter by project category. Multiple categories can be specified. Restricts the list to the projects that have interests in that category(ies)
      type: integer
      collectionFormat: multi
    - in: query
      name: location
      description: Filter by project location (Latitude,longitude,Radius in Km). Restricts the list to the projects used in projects geolocated in that area
      type: number
      collectionFormat: csv
    - in: query
      name: page
      description: Page number (starting at 1) if the result can be paginated
      type: integer
    - in: query
      name: limit
      description: Page limit (maximum 50 results, defaults to 10) if the result can be paginated
      type: integer
responses:
    200:
        description: List of available projects
        schema:
            $ref: '#/definitions/api_projects_projects_get_ResponseProject'
    401:
        description: Resource requires authorization
    400:
        description: Invalid parameters format
